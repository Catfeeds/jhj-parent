<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhj.po.dao.order.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.jhj.po.model.order.Orders">
		<id column="id" property="id" jdbcType="NUMERIC" />
		<result column="am_id" property="amId" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="city_id" property="cityId" jdbcType="NUMERIC" />
		<result column="org_id" property="orgId" jdbcType="NUMERIC" />
		<result column="addr_id" property="addrId" jdbcType="NUMERIC" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="order_type" property="orderType" jdbcType="NUMERIC" />
		<result column="service_type" property="serviceType" jdbcType="NUMERIC" />
		<result column="service_content" property="serviceContent" jdbcType="VARCHAR" />
		<result column="service_date" property="serviceDate" jdbcType="NUMERIC" />
		<result column="service_hour" property="serviceHour" jdbcType="NUMERIC" />
		<result column="staff_nums" property="staffNums" jdbcType="NUMERIC" />
		<result column="order_status" property="orderStatus" jdbcType="NUMERIC" />
		<result column="order_rate" property="orderRate" jdbcType="NUMERIC" />
		<result column="order_rate_content" property="orderRateContent" jdbcType="VARCHAR" />
		<result column="order_from" property="orderFrom" jdbcType="NUMERIC" />
		<result column="order_op_from" property="orderOpFrom" jdbcType="NUMERIC" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="remarks_confirm" property="remarksConfirm" jdbcType="VARCHAR" />
		<result column="add_time" property="addTime" jdbcType="NUMERIC" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />

		<result column="remarks_bussiness_confirm" property="remarksBussinessConfirm" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, am_id, user_id, mobile, city_id, org_id, addr_id, order_no, order_type,
		service_type,service_content, service_date, service_hour, staff_nums, order_status,
		order_rate,
		order_rate_content, order_from,order_op_from, remarks,remarks_confirm, add_time, update_time
		,remarks_bussiness_confirm
	</sql>

	<!-- 在某个 门店 下过单 的 用户 -->

	<!-- 用户及其 订单数 -->
	<resultMap id="CoopUserOrderMap" type="com.jhj.vo.chart.CoopUserOrderVo">
		<result column="userId" property="userId" />
		<result column="userMobile" property="userMobile" />
		<result column="userOrderNum" property="userOrderNum" />
	</resultMap>

	<!-- 运营平台，提醒订单 列表 -->
	<select id="selectBySearchVo" resultMap="BaseResultMap" parameterType="com.jhj.vo.order.OrderSearchVo">
		select
		<include refid="Base_Column_List" />
		from orders
		<include refid="bySearchVo" />
		order by add_time desc
	</select>

	<select id="selectByListPage" resultMap="BaseResultMap" parameterType="com.jhj.vo.order.OrderSearchVo">
		select
		<include refid="Base_Column_List" />
		from orders
		<include refid="bySearchVo" />
		order by 
		<if test="orderByProperty!=null">
			${orderByProperty}
		</if>
		<if test="orderByProperty==null or orderByProperty==''">
			add_time desc
		</if>
	</select>
	
	<!-- 根据开始时间，接收时间，staff_id ，得出订单总数: -->
	<select id="getTotalOrderCount" resultType="java.lang.Long" parameterType="com.jhj.vo.order.OrderSearchVo">
		select count(*) 
		from orders
		<include refid="bySearchVo" />
	</select>
	
		<!-- 根据开始时间，接收时间，staff_id ，得出订单总金额 -->
	<select id="getTotalOrderMoney" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderSearchVo">
		select sum(order_money) from order_prices where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)

	</select>
	
	<select id="getTotalOrderMoneyExt" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderSearchVo">
		select sum(order_pay) from order_price_ext where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)

	</select>
	
	<select id="getTotalOrderIncomeMoney" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderSearchVo">
		select sum(order_pay)from order_prices where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)
	</select>
	
	<select id="getTotalOrderIncomeMoneyExt" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderSearchVo">
		select sum(order_pay)from order_price_ext where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)
	</select>
	
	<!-- 钟点工订单0订单总金额 -->
	<select id="getTotalOrderIncomeHourMoney" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderQuerySearchVo">
		select sum(order_money) from order_prices where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)

	</select>
	
	<!-- 钟点工订单0订单总金额 -->
	<select id="getTotalOrderIncomeHourMoneyExt" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderQuerySearchVo">
		select sum(order_pay) from order_price_ext where order_id in
		(
			select id from orders
			<include refid="bySearchVo" />
		)

	</select>
	
	<sql id="bySearchVo">
		
		where 1=1
		<if test="amId != null">
			and am_id = #{amId,jdbcType=NUMERIC}
		</if>

		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>

		<if test="mobile !=null and mobile !='' ">
			and mobile like  CONCAT('%',#{mobile},'%')
		</if>
		
		<if test="staffId != null">
			and id in (select order_id from order_dispatchs where staff_id = #{staffId,jdbcType=NUMERIC}  and dispatch_status = 1)
		</if>
		
		<if test="orderId != null">
			and id = #{orderId,jdbcType=NUMERIC}
		</if>

		<if test="orderNo != null">
			and order_no like CONCAT('%','${orderNo}','%' )
		</if>

		<if test="orderType != null">
			and order_type = #{orderType,jdbcType=NUMERIC}
		</if>

		<if test="orderTypes != null">
			and order_type in
			<foreach item="item" index="index" collection="orderTypes" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orderStatus != null">
			and order_status = #{orderStatus,jdbcType=NUMERIC}
		</if>

		<if test="orderStatusList != null">
			and order_status in
			<foreach item="item" collection="orderStatusList" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="serviceType != null">
			and service_type = #{serviceType,jdbcType=NUMERIC}
		</if>

		<if test="serviceTypes != null">
			and service_type in
			<foreach item="item" index="index" collection="serviceTypes"  open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orderRate != null">
			and order_rate = #{orderRate,jdbcType=NUMERIC}
		</if>

		<if test="orderFrom != null">
			and order_from = #{orderFrom,jdbcType=NUMERIC}
		</if>

		<if test="orderOpFrom != null">
			and order_op_from = #{orderOpFrom,jdbcType=NUMERIC}
		</if>

		<if test="startServiceTime !=null">
			<![CDATA[ and service_date >= #{startServiceTime}]]>
		</if>

		<if test="endServiceTime !=null">
			<![CDATA[ and service_date <= #{endServiceTime}]]>
		</if>

		<if test="startServiceHourTime !=null">
			<![CDATA[ and (service_date + service_hour *3600) >= #{startServiceHourTime}]]>
		</if>

		<if test="endServiceHourTime !=null">
			<![CDATA[ and (service_date + service_hour *3600) <= #{endServiceHourTime}]]>
		</if>

		<if test="startAddTime !=null">
			<![CDATA[ and add_time >= #{startAddTime}]]>
		</if>

		<if test="endAddTime !=null">
			<![CDATA[ and add_time <= #{endAddTime}]]>
		</if>

		<if test="startUpdateTime !=null">
			<![CDATA[ and update_time >= #{startUpdateTime}]]>
		</if>

		<if test="endUpdateTime !=null">
			<![CDATA[ and update_time <= #{endUpdateTime}]]>
		</if>

		<if test="parentId !=null">
			and id in (select order_id from order_dispatchs where parent_id = #{parentId,jdbcType=NUMERIC} and dispatch_status = 1)
		</if>

		<if test="orgId !=null and orgId != 0">
			and id in (select order_id from order_dispatchs where org_id = #{orgId,jdbcType=NUMERIC} and dispatch_status = 1)
		</if>

		<if test="isApply !=null">
			and id in (select order_id from order_dispatchs where is_apply = #{isApply,jdbcType=NUMERIC} and dispatch_status = 1)
		</if>

		<if test="addrName !=null and addrName !=''">
			and addr_id in ( select id from user_addrs where MATCH(name) AGAINST ('${addrName}' IN BOOLEAN MODE) )
		</if>
		
		<if test="payType!=null">
			and order_no in (select order_no from order_prices where pay_type = #{payType,jdbcType=NUMERIC})
		</if>

		
	</sql>
	



	<select id="totalUserAndOrder" resultMap="CoopUserOrderMap">
		select
		user_id AS userId,
		mobile AS userMobile,
		count(*) AS userOrderNum
		from
		orders
		where
		user_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			${item}
		</foreach>
		group by user_id
		order by user_id desc
	</select>

	<select id="totalOrderInUserIds" resultType="java.lang.Long">
		select
		count(*)
		from
		orders
		where
		user_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			${item}
		</foreach>
	</select>


	<!-- 亲密度订单量 -->
	<select id="totalIntimacyOrders" resultType="java.lang.Integer">
		select
		count(*)
		from orders
		where
		order_status > 1
		<if test="amId != null">
			and am_id = #{amId,jdbcType=NUMERIC}
		</if>

		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>

	</select>

	<select id="totalByUserIds" resultType="java.util.HashMap" parameterType="java.util.List">
		select user_id, count(*) as total
		from orders
		where user_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			${item}
		</foreach>
		group by user_id
		order by user_id desc
	</select>

	<!-- 助理订单2订单总金额 -->
	<select id="getTotalOrderIncomeStaffMoney" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderQuerySearchVo">
		select sum(order_money)from order_prices where order_id in
		(
		select id from orders
		where order_no in (select order_no from order_dispatchs where
		staff_id
		=#{staffId,jdbcType=NUMERIC} and dispatch_status = 1
		<if test="startTime != null">
				<![CDATA[	and update_time >= ${startTime} ]]>
		</if>
		<if test="endTime != null">
				<![CDATA[	and update_time <= ${endTime} ]]>
		</if>
		)
		and order_type = 2
		and order_status = 7
		)

	</select>
	<!-- 跑腿订单2订单总金额 -->
	<select id="getTotalOrderIncomeRunMoney" resultType="java.math.BigDecimal" parameterType="com.jhj.vo.order.OrderQuerySearchVo">
		select sum(order_money)from order_prices where order_id in
		(
		select id from orders
		where order_no in (select order_no from order_dispatchs where
		staff_id
		=#{staffId,jdbcType=NUMERIC} and dispatch_status = 1
		<if test="startTime != null">
				<![CDATA[	and update_time >= ${startTime} ]]>
		</if>
		<if test="endTime != null">
				<![CDATA[	and update_time <= ${endTime} ]]>
		</if>
		)
		and order_type = 3
		and order_status = 7
		)

	</select>
	

	<!-- 当月订单总数order_status7,8: -->
	<select id="getTotalOrderCountByMouth" resultType="java.lang.Long" parameterType="com.jhj.vo.order.OrderQuerySearchVo">
		select count(*) from orders where id in
		(
		select order_id from order_dispatchs where
		staff_id =#{staffId,jdbcType=NUMERIC}
		and dispatch_status = 1
		<if test="startTime != null">
				<![CDATA[	and service_date >= ${startTime} ]]>
		</if>
		<if test="endTime != null">
				<![CDATA[	and service_date <= ${endTime} ]]>
		</if>
		) and order_status in (7,8)
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=NUMERIC}
	</select>



	<select id="selectByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_no = #{orderNo,jdbcType=VARCHAR}
	</select>

	<select id="userTotalByMonth" resultType="java.util.HashMap" parameterType="com.jhj.vo.order.OrderSearchVo">
		select FROM_UNIXTIME(service_date ,'%Y-%m-%d') as service_date , count(distinct id) as total
		FROM
		(SELECT id, 
		<![CDATA[ (CASE WHEN service_date > add_time THEN service_date ELSE add_time END ) as service_date ]]>
		from orders
		where 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>

		<if test="startTime != null">
			<![CDATA[ and ( 
			
				(add_time >= #{startTime,jdbcType=NUMERIC} and add_time <= #{endTime,jdbcType=NUMERIC}) 
				OR 
				(service_date >= #{startTime,jdbcType=NUMERIC} and service_date <= #{endTime,jdbcType=NUMERIC}) 
				
				) ]]>
		</if>
		) as T
		GROUP BY service_date
		order by service_date asc
	</select>

	<select id="userAllTotalByMonth" resultType="java.util.HashMap" parameterType="com.jhj.vo.order.OrderSearchVo">
		SELECT count(*) as total, 
		<![CDATA[ COUNT(CASE WHEN order_status < 7  THEN id END ) as total_uf ]]>
		from orders
		where 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>

		<if test="startTime != null">
			<![CDATA[ and ( (add_time >= #{startTime,jdbcType=NUMERIC} and add_time <= #{endTime,jdbcType=NUMERIC}) OR (service_date >= #{startTime,jdbcType=NUMERIC} and service_date <= #{endTime,jdbcType=NUMERIC}) ) ]]>
		</if>
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from orders
		where id = #{id,jdbcType=NUMERIC}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.jhj.po.model.order.Orders">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into orders (id, am_id, user_id,
		mobile, city_id, org_id, addr_id,
		order_no,
		order_type, service_type,
		service_content, service_date, service_hour, staff_nums,
		order_status, order_rate, order_rate_content,
		order_from,order_op_from, remarks,remarks_confirm,add_time, update_time,
		remarks_bussiness_confirm
		)
		values
		(#{id,jdbcType=NUMERIC}, #{amId,jdbcType=NUMERIC},
		#{userId,jdbcType=NUMERIC},
		#{mobile,jdbcType=CHAR}, #{cityId,jdbcType=NUMERIC}, #{orgId,jdbcType=NUMERIC},
		#{addrId,jdbcType=NUMERIC},
		#{orderNo,jdbcType=VARCHAR}, #{orderType,jdbcType=NUMERIC},
		#{serviceType,jdbcType=NUMERIC},
		#{serviceContent,jdbcType=VARCHAR},
		#{serviceDate,jdbcType=NUMERIC}, #{serviceHour,jdbcType=NUMERIC}, #{staffNums,jdbcType=NUMERIC},
		#{orderStatus,jdbcType=NUMERIC}, #{orderRate,jdbcType=NUMERIC},
		#{orderRateContent,jdbcType=VARCHAR},
		#{orderFrom,jdbcType=NUMERIC},
		#{orderOpFrom,jdbcType=NUMERIC},
		#{remarks,jdbcType=VARCHAR},
		#{remarksConfirm,jdbcType=VARCHAR},
		#{addTime,jdbcType=NUMERIC}, #{updateTime,jdbcType=NUMERIC},
		#{remarksBussinessConfirm,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.jhj.po.model.order.Orders">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>

		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="amId != null">
				am_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="cityId != null">
				city_id,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
			<if test="addrId != null">
				addr_id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="orderType != null">
				order_type,
			</if>
			<if test="serviceType != null">
				service_type,
			</if>
			<if test="serviceContent != null">
				service_content,
			</if>
			<if test="serviceDate != null">
				service_date,
			</if>
			<if test="serviceHour != null">
				service_hour,
			</if>
			<if test="staffNums != null">
				staff_nums,
			</if>
			<if test="orderStatus != null">
				order_status,
			</if>
			<if test="orderRate != null">
				order_rate,
			</if>
			<if test="orderRateContent != null">
				order_rate_content,
			</if>
			<if test="orderFrom != null">
				order_from,
			</if>
			<if test="orderOpFrom != null">
				order_op_from,
			</if>
			<if test="remarks !=null">
				remarks,
			</if>
			<if test="remarksConfirm !=null">
				remarks_confirm,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>

			<if test="remarksBussinessConfirm !=null">
				remarks_bussiness_confirm
			</if>


		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=NUMERIC},
			</if>
			<if test="amId != null">
				#{amId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=CHAR},
			</if>
			<if test="cityId != null">
				#{cityId,jdbcType=NUMERIC},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				#{addrId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=NUMERIC},
			</if>
			<if test="serviceType != null">
				#{serviceType,jdbcType=NUMERIC},
			</if>
			<if test="serviceContent != null">
				#{serviceContent,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				#{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="serviceHour != null">
				#{serviceHour,jdbcType=NUMERIC},
			</if>
			<if test="staffNums != null">
				#{staffNums,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				#{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				#{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				#{orderRateContent,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				#{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderOpFrom != null">
				#{orderOpFrom,jdbcType=NUMERIC},
			</if>
			<if test="remarks !=null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="remarksConfirm !=null">
				#{remarksConfirm,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
			<if test="remarksBussinessConfirm !=null">
				#{remarksBussinessConfirm,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jhj.po.model.order.Orders">
		update orders
		<set>
			<if test="amId != null">
				am_id = #{amId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=CHAR},
			</if>
			<if test="cityId != null">
				city_id = #{cityId,jdbcType=NUMERIC},
			</if>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				addr_id = #{addrId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				order_type = #{orderType,jdbcType=NUMERIC},
			</if>
			<if test="serviceType != null">
				service_type = #{serviceType,jdbcType=NUMERIC},
			</if>
			<if test="serviceContent != null">
				service_content = #{serviceContent,jdbcType=VARCHAR},
			</if>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="serviceHour != null">
				service_hour = #{serviceHour,jdbcType=NUMERIC},
			</if>
			<if test="staffNums != null">
				staff_nums = #{staffNums,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				order_status = #{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				order_rate = #{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				order_rate_content = #{orderRateContent,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				order_from = #{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderOpFrom != null">
				order_op_from = #{orderOpFrom,jdbcType=NUMERIC},
			</if>
			<!-- TODO 当初 因为这里有bug ,给注释了 ,现在改好了 -->
			<if test="remarks !=null and remarks !='' ">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="remarksConfirm !=null and remarksConfirm !='' ">
				remarks_confirm = #{remarksConfirm,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=NUMERIC},
			</if>

			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>

			<if test="remarksBussinessConfirm !=null and remarksBussinessConfirm !='' ">
				remarks_bussiness_confirm = #{remarksBussinessConfirm,jdbcType=VARCHAR}
			</if>

		</set>
		where id = #{id,jdbcType=NUMERIC}
	</update>

	<update id="updateByUpdateTimeSelective" parameterType="com.jhj.po.model.order.Orders">
		update orders
		<set>
			<if test="serviceContent != null">
				service_content = #{serviceContent,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where id = #{id,jdbcType=NUMERIC}
	</update>

	<update id="updateByCleanUpdateTimeSelective" parameterType="com.jhj.po.model.order.Orders">
		update orders
		<set>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where id = #{id,jdbcType=NUMERIC}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.jhj.po.model.order.Orders">
		update orders
		set am_id = #{amId,jdbcType=NUMERIC},
		user_id = #{userId,jdbcType=NUMERIC},
		mobile =
		#{mobile,jdbcType=CHAR},
		city_id = #{cityId,jdbcType=NUMERIC},
		org_id = #{orgId,jdbcType=NUMERIC},
		addr_id = #{addrId,jdbcType=NUMERIC},
		order_no =
		#{orderNo,jdbcType=VARCHAR},
		order_type =
		#{orderType,jdbcType=NUMERIC},
		service_type = #{serviceType,jdbcType=NUMERIC},
		service_content =
		#{serviceContent,jdbcType=VARCHAR},
		service_date =
		#{serviceDate,jdbcType=NUMERIC},
		service_hour = #{serviceHour,jdbcType=NUMERIC},
		staff_nums = #{staffNums,jdbcType=NUMERIC},
		order_status =
		#{orderStatus,jdbcType=NUMERIC},
		order_rate =
		#{orderRate,jdbcType=NUMERIC},
		order_rate_content = #{orderRateContent,jdbcType=VARCHAR},
		order_from =
		#{orderFrom,jdbcType=NUMERIC},
		order_op_from = #{orderOpFrom,jdbcType=NUMERIC},
		remarks = #{remarks,jdbcType=VARCHAR},
		remarks_confirm =
		#{remarksConfirm,jdbcType=VARCHAR},
		add_time =
		#{addTime,jdbcType=NUMERIC},
		update_time = #{updateTime,jdbcType=NUMERIC},

		remarks_bussiness_confirm =
		#{remarksBussinessConfirm,jdbcType=VARCHAR},

		where id =
		#{id,jdbcType=NUMERIC}
	</update>

	<resultMap id="ChartMap" type="com.jhj.vo.chart.ChartMapVo">
		<result column="name" property="name" />
		<result column="serviceType" property="serviceType" />
		<result column="series" property="series" />
		<result column="total" property="total" />
		<result column="totalMoney" property="totalMoney" />
	</resultMap>
	<!-- **************************** 市场订单图表 ***************************** -->

	<!-- 市场订单图表-按天统计 -->
	<select id="statByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_from AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单图表-按月统计 -->
	<select id="statByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_from AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单图表-按季度统计 -->
	<select id="statByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_from AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-", quarter(FROM_UNIXTIME( add_time)) ) as series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单图表-按天统计 退单数 -->
	<select id="statOrderCancelByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT '退单数' as name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单图表-按月统计 - 退单数 -->
	<select id="statOrderCancelByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT '退单数' AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单图表-按季度统计 - 退单数 -->
	<select id="statOrderCancelByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT '退单数' AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-", quarter(FROM_UNIXTIME( add_time)) ) as series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场订单数求和 -->
	<select id="statTotalOrder" resultType="java.util.HashMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		select count(*) as total,count(case when order_type=0 then 1 else null end) as jc,count(case when order_type=1 then 1 else null end) as sd from orders
		WHERE
		1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>

		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>

	</select>

	<!-- **************************** 订单收入图表 ***************************** -->

	<select id="orderRevenueByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">

		SELECT name, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(
		SELECT order_from AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		order_money
		FROM
		(
		SELECT T1.order_from, T1.add_time, T2.order_money FROM
		(SELECT
		id, order_from, add_time
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC

	</select>

	<select id="orderRevenueByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(
		SELECT order_from AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		order_money
		FROM
		(
		SELECT T1.order_from, T1.add_time, T2.order_money FROM
		(SELECT
		id, order_from, add_time
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC
	</select>

	<select id="orderRevenueByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(
		SELECT order_from AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-",
		quarter(FROM_UNIXTIME( add_time)) ) as series,
		order_money
		FROM
		(
		SELECT T1.order_from, T1.add_time, T2.order_money FROM
		(SELECT
		id, order_from, add_time
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC

	</select>

	<!-- **************************** 市场品类图表 ***************************** -->

	<!-- 市场品类图表-按天统计 -->
	<select id="chartTypeByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_type AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场品类图表-按月统计 -->
	<select id="chartTypeByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_type AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- 市场品类图表-按季度统计 -->
	<select id="chartTypeByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_type AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-", quarter(FROM_UNIXTIME( add_time)) ) as series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		GROUP BY name, series ORDER BY series ASC
	</select>
	<!--某段时间之前用户个数 -->
	<select id="statUserByDay" resultMap="BaseResultMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT
		<include refid="Base_Column_List" />
		from
		(SELECT
		<include refid="Base_Column_List" />
		,
		FROM_UNIXTIME(add_time, "%c-%e") AS series
		FROM orders WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time < #{endTime}]]>
		</if>
		) as T
		GROUP BY user_id ,series ORDER BY series ASC
	</select>
	<!-- 统计某段时间内下过单的新用户按天统计 -->
	<select id="totalByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		select series, count(distinct user_id) as total FROM
		(
		select t1.user_id, t1.series from
		(SELECT user_id,
		FROM_UNIXTIME(add_time, "%c-%e") AS series
		FROM orders
		where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T1
		inner join
		(select id, FROM_UNIXTIME(add_time, "%c-%e") AS series
		FROM users where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T2
		on T1.user_id = T2.id and T1.series = T2.series
		) as T GROUP BY series
	</select>
	<!-- 统计某段时间内下过单的新用户按月统计 -->
	<select id="totalByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		select series, count(distinct user_id) as total FROM
		(
		select t1.user_id, t1.series from
		(SELECT user_id,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series
		FROM orders
		where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T1
		inner join
		(select id, FROM_UNIXTIME(add_time, "%Y-%m") AS series
		FROM users where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T2
		on T1.user_id = T2.id and T1.series = T2.series
		) as T GROUP BY series

	</select>
	<!-- 统计某段时间内下过单的新用户按季度统计 -->
	<select id="totalByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		select series, count(distinct user_id) as total FROM
		(
		select t1.user_id, t1.series from
		(SELECT user_id,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-",
		quarter(FROM_UNIXTIME( add_time)) ) as series
		FROM orders where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T1
		inner join
		(select id, CONCAT(year(FROM_UNIXTIME( add_time)), "-", quarter(FROM_UNIXTIME( add_time)) ) as series
		FROM users where 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		) as T2
		on T1.user_id = T2.id and T1.series = T2.series
		) as T GROUP BY series
	</select>

	<!-- **************************** 品类收入图表 ***************************** -->
	<!--统计查询条件  -->
	<sql id="chartSearchVo">
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				${item}
			</foreach>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
	</sql>

	<select id="chartTypeRevenue" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name,service_type as serviceType, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(SELECT order_type AS name,service_type,
		<if test="selectCycle!=12">
			FROM_UNIXTIME(add_time, #{formatParam}) AS series,
		</if>
		<if test="selectCycle==12">
			CONCAT(year(FROM_UNIXTIME(add_time)), "-",quarter(FROM_UNIXTIME(add_time)) ) as series,
		</if>
		order_money FROM
		(SELECT T1.order_type,T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT id, order_type,service_type, add_time FROM orders
		WHERE 1=1
		<include refid="chartSearchVo"/>
		and order_type in (0,1)
		) AS T1 LEFT JOIN order_prices AS T2 ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name,serviceType, series ORDER BY series ASC
	</select>

	<!-- <select id="chartTypeRevenueByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">

		SELECT name,service_type as serviceType, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(SELECT order_type AS name,service_type,FROM_UNIXTIME(add_time, "%Y-%m") AS series,order_money
		FROM
		(SELECT T1.order_type,T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT id, order_type,service_type, add_time
		FROM orders
		WHERE 1=1
		<include refid="chartSearchVo"/>
		and order_type in (0,1)
		) AS T1 LEFT JOIN order_prices AS T2 ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name,serviceType, series ORDER BY series ASC
	</select>
 -->
	<!-- <select id="chartTypeRevenueByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">

		SELECT name,service_type as serviceType, series, COUNT(*) AS total, SUM(order_money) AS totalMoney FROM
		(SELECT order_type AS name,service_type,CONCAT(year(FROM_UNIXTIME(add_time)), "-",quarter(FROM_UNIXTIME(add_time)) ) as series,order_money
		FROM
		(SELECT T1.order_type,T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT id,order_type,service_type, add_time FROM orders
		WHERE 1=1
		<include refid="chartSearchVo"/>
		and order_type in (0,1)
		) AS T1 LEFT JOIN order_prices AS T2 ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name,serviceType, series ORDER BY series ASC
	</select> -->

	<!--助理品类按天统计 -->
	<select id="statChartAmTypeByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT service_type AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(

		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)
		)
		GROUP BY service_type, series ORDER BY series ASC
	</select>
	<!--助理品类按月统计 -->
	<select id="statChartAmTypeByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT service_type AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		COUNT(*) AS total
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(

		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)

		)
		GROUP BY name, series ORDER BY series ASC
	</select>
	<!--助理品类按季度统计 -->
	<select id="statChartAmTypeByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT service_type AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-", quarter(FROM_UNIXTIME( add_time)) ) as series,
		COUNT(*) AS order_service_addons
		FROM
		orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(

		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)
		)
		GROUP BY name, series ORDER BY series ASC
	</select>
	<!--助理品类收入按天统计 -->
	<select id="statChartServiceTypeByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name, series, COUNT(*) AS total,sum(order_money) AS totalMoney FROM
		(
		SELECT service_type AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		order_money
		FROM
		(
		SELECT T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT
		id, service_type, add_time
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(

		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)
		)
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC
	</select>
	<!--助理品类收入按月 -->
	<select id="statServiceTypeByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name, series, COUNT(*) AS total, sum(order_money) AS totalMoney FROM
		(
		SELECT service_type AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		order_money
		FROM
		(
		SELECT T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT
		id, service_type, add_time
		FROM orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null and orgId != 0">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(

		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)

		)
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC
	</select>
	<!--助理品类收入按季度统计 -->
	<select id="statServiceTypeByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT name, series, COUNT(*) AS total, sum(order_money) AS totalMoney FROM
		(
		SELECT service_type AS name,
		CONCAT(year(FROM_UNIXTIME( add_time)), "-",
		quarter(FROM_UNIXTIME( add_time)) ) as series,
		order_money
		FROM
		(
		SELECT T1.service_type, T1.add_time, T2.order_money FROM
		(SELECT
		id, service_type, add_time
		FROM
		orders
		WHERE 1=1
		<if test="startTime !=null">
					<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
					<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="orgId !=null">
			and org_id = #{orgId,jdbcType=NUMERIC}
		</if>
		and service_type in(
		SELECT
		service_type_id
		FROM
		partner_service_type
		WHERE
		parent_id IN(25,26,27)
		)
		) AS T1
		LEFT JOIN order_prices AS T2
		ON T1.id = T2. order_id
		) AS T3
		) AS T4
		GROUP BY name, series ORDER BY series ASC
	</select>

	<!-- ************************* 话费订单图表（数量、收入可共用此sql） ************************* -->
	<select id="phoneRechargeByDay" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_money AS name,
		FROM_UNIXTIME(add_time, "%c-%e") AS series,
		COUNT(*) AS
		total,
		SUM(order_pay) AS totalMoney
		FROM order_prices
		WHERE order_id
		IN(
		SELECT id
		FROM orders
		WHERE order_type = 6
		and order_status in (14,15,16)
		) GROUP BY
		name,series
	</select>

	<select id="phoneRechargeByMonth" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_money AS name,
		FROM_UNIXTIME(add_time, "%Y-%m") AS series,
		COUNT(*) AS
		total,
		SUM(order_pay) AS totalMoney
		FROM order_prices
		WHERE order_id
		IN(
		SELECT id
		FROM orders
		WHERE order_type = 6
		and order_status in (14,15,16)
		) GROUP BY
		name,series
	</select>

	<select id="phoneRechargeByQuarter" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT order_money AS name,
		CONCAT(year(FROM_UNIXTIME(add_time)), "-",
		quarter(FROM_UNIXTIME(add_time)) ) as series,
		COUNT(*) AS total,
		SUM(order_pay) AS totalMoney
		FROM order_prices
		WHERE order_id
		IN(
		SELECT id
		FROM orders
		WHERE
		order_type = 6
		and order_status in (14,15,16)
		) GROUP BY name,series
	</select>

	<select id="getOrderSrc" resultMap="ChartMap" parameterType="com.jhj.vo.chart.ChartSearchVo">
		SELECT o.order_from as orderFrom,o.order_op_from as orderOpFrom,
		<if test="selectCycle!=12">
			FROM_UNIXTIME(o.add_time, #{formatParam}) AS series,
		</if>
		<if test="selectCycle==12">
			concat(year(FROM_UNIXTIME(o.add_time)),"-",quarter(FROM_UNIXTIME(o.add_time))) AS series,
		</if>
		sum(order_money) as totalMoney,count(*) as total 
		from order_prices as op,orders as o 
		WHERE op.order_id = o.id 
		<if test="startTime !=null">
			<![CDATA[ and o.add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and o.add_time <= #{endTime}]]>
		</if>
		and o.order_status between 2 and 9
		GROUP BY o.order_from,o.order_op_from,series
	</select>
</mapper>