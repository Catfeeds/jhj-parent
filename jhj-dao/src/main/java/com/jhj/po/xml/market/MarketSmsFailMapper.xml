<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhj.po.dao.market.MarketSmsLogMapper" >
  <resultMap id="BaseResultMap" type="com.jhj.po.model.market.MarketSmsLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="market_sms_id" property="marketSmsId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="NUMERIC" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="sms_result" property="smsResult" jdbcType="VARCHAR" />
    <result column="sms_msg" property="smsMsg" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, market_sms_id, user_id, mobile, sms_result, sms_msg, add_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from market_sms_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from market_sms_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jhj.po.model.market.MarketSmsLog" >
    insert into market_sms_log (id, market_sms_id, user_id, 
      mobile, sms_result, sms_msg, 
      add_time)
    values (#{id,jdbcType=INTEGER}, #{marketSmsId,jdbcType=INTEGER}, #{userId,jdbcType=NUMERIC}, 
      #{mobile,jdbcType=CHAR}, #{smsResult,jdbcType=VARCHAR}, #{smsMsg,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.jhj.po.model.market.MarketSmsLog" >
    insert into market_sms_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="marketSmsId != null" >
        market_sms_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="smsResult != null" >
        sms_result,
      </if>
      <if test="smsMsg != null" >
        sms_msg,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="marketSmsId != null" >
        #{marketSmsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="smsResult != null" >
        #{smsResult,jdbcType=VARCHAR},
      </if>
      <if test="smsMsg != null" >
        #{smsMsg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhj.po.model.market.MarketSmsLog" >
    update market_sms_log
    <set >
      <if test="marketSmsId != null" >
        market_sms_id = #{marketSmsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="smsResult != null" >
        sms_result = #{smsResult,jdbcType=VARCHAR},
      </if>
      <if test="smsMsg != null" >
        sms_msg = #{smsMsg,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhj.po.model.market.MarketSmsLog" >
    update market_sms_log
    set market_sms_id = #{marketSmsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=NUMERIC},
      mobile = #{mobile,jdbcType=CHAR},
      sms_result = #{smsResult,jdbcType=VARCHAR},
      sms_msg = #{smsMsg,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>